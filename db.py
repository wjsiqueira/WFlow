import osimport sqlite3#from conf import CAMINHO_PARA_O_BANCOprint('................criando o banco................')print('>>>>>>>>>>>>>>>>>>>', os.getcwd())conn = sqlite3.connect('/home/wilson_siqueira/8-berrondo/bd/module.db')cursor = conn.cursor()try:    cursor.execute("""    CREATE TABLE taxa (            id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,            sw INTEGER,            porta INTEGER,            segundos INTEGER,            nsegundos INTEGER,            tx INTEGER,	        tx_Bps INTEGER,            rx INTEGER,            rx_Bps INTEGER,            errostx INTEGER,            errosrx INTEGER,            packetstx INTEGER,            packetsrx INTEGER,            tx_dropped INTEGER,            rx_dropped INTEGER,            rx_frame_err INTEGER,            rx_over_err INTEGER,            rx_crc_err INTEGER,            collisions INTEGER    );    """)except sqlite3.OperationalError:    #raise    passdef manda_pro_banco(sw, porta, segundos, nsegundos, tx, tx_Bps, rx, rx_Bps, errostx, errosrx, packetstx, packetsrx, tx_dropped, rx_dropped, rx_frame_err, rx_over_err, rx_crc_err, collisions):    # inserindo dados na tabela    cursor.execute("""    INSERT INTO taxa (sw, porta, segundos, nsegundos, tx, tx_Bps, rx, rx_Bps, errostx, errosrx, packetstx, packetsrx, tx_dropped, rx_dropped, rx_frame_err, rx_over_err, rx_crc_err, collisions)    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)    """, (sw, porta, segundos, nsegundos, tx, tx_Bps, rx, rx_Bps, errostx, errosrx, packetstx, packetsrx, tx_dropped, rx_dropped, rx_frame_err, rx_over_err, rx_crc_err, collisions))    conn.commit()def monitora_limiar(limiar):    c = cursor.execute("""select sw, porta from taxa where rx_Bps > ?""", (limiar,))    rrs = c.fetchall()[:2]    c = cursor.execute("""select sw, porta from taxa where tx_Bps > ?""", (limiar,))    trs = c.fetchall()[:2]    return rrs, trsdef delete_data():    cursor.execute('delete from taxa')    conn.commit()        